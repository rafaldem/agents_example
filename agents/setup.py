from env_file import get_env


# Environment variables
ENVS = get_env()

TOPIC = ENVS.get('TOPIC')

TOPIC_WEBPAGE_URL = ENVS.get('TOPIC_WEBPAGE_URL')

HW_AGENT_ROLE = ENVS.get('HW_AGENT_ROLE')
HW_AGENT_GOAL = ENVS.get('HW_AGENT_GOAL')
HW_AGENT_BACKSTORY = ENVS.get('HW_AGENT_BACKSTORY')

WEB_DEV_ROLE = ENVS.get('WEB_DEV_ROLE')
WEB_DEV_GOAL = ENVS.get('WEB_DEV_GOAL')
WEB_DEV_BACKSTORY = ENVS.get('WEB_DEV_BACKSTORY')

REFACTOR_EXPERT_ROLE = ENVS.get('REFACTOR_EXPERT_ROLE')
REFACTOR_EXPERT_GOAL = ENVS.get('REFACTOR_EXPERT_GOAL')
REFACTOR_EXPERT_BACKSTORY = ENVS.get('REFACTOR_EXPERT_BACKSTORY')

SW_TESTER_ROLE = ENVS.get('SW_TESTER_ROLE')
SW_TESTER_GOAL = ENVS.get('SW_TESTER_GOAL')
SW_TESTER_BACKSTORY = ENVS.get('SW_TESTER_BACKSTORY')

HW_EXPERT_TASK_DESCRIPTION = ENVS.get('HW_EXPERT_TASK_DESCRIPTION')
HW_EXPERT_TASK_EXPECTED_OUTPUT = ENVS.get('HW_EXPERT_TASK_EXPECTED_OUTPUT')

WEB_DEVELOPER_TASK_DESCRIPTION = ENVS.get('WEB_DEVELOPER_TASK_DESCRIPTION')
WEB_DEVELOPER_TASK_EXPECTED_OUTPUT = ENVS.get('WEB_DEVELOPER_TASK_EXPECTED_OUTPUT')

SW_TESTER_TASK_DESCRIPTION = ENVS.get('SW_TESTER_TASK_DESCRIPTION')
SW_TESTER_TASK_EXPECTED_OUTPUT = ENVS.get('SW_TESTER_TASK_EXPECTED_OUTPUT')

REFACTOR_TASK_DESCRIPTION = ENVS.get('REFACTOR_TASK_DESCRIPTION')
REFACTOR_TASK_EXPECTED_OUTPUT = ENVS.get('REFACTOR_TASK_EXPECTED_OUTPUT')

# Configuration constants
SELENIUM_SCRAPER_WAIT_TIME = ENVS.get('SELENIUM_SCRAPER_WAIT_TIME')

# Agent config
AGENT_MODEL_NAME = ENVS.get('AGENT_MODEL_NAME')
AGENT_TEMPERATURE = ENVS.get('AGENT_TEMPERATURE')
AGENT_MAX_TOKENS = ENVS.get('AGENT_MAX_TOKENS')
AGENT_STREAMING = ENVS.get('AGENT_STREAMING')
AGENT_TOP_P = ENVS.get('AGENT_TOP_P')
AGENT_FREQUENCY_PENALTY = ENVS.get('AGENT_FREQUENCY_PENALTY')
AGENT_PRESENCE_PENALTY = ENVS.get('AGENT_PRESENCE_PENALTY')
AGENT_N = ENVS.get('AGENT_N')
AGENT_BEST_OF = ENVS.get('AGENT_BEST_OF')
AGENT_MAX_RETRIES = ENVS.get('AGENT_MAX_RETRIES')

# Manager config
MANAGER_MODEL_NAME = ENVS.get('MANAGER_MODEL_NAME')
MANAGER_TEMPERATURE = ENVS.get('MANAGER_TEMPERATURE')
MANAGER_MAX_TOKENS = ENVS.get('MANAGER_MAX_TOKENS')
MANAGER_STREAMING = ENVS.get('MANAGER_STREAMING')
MANAGER_TOP_P = ENVS.get('MANAGER_TOP_P')
MANAGER_FREQUENCY_PENALTY = ENVS.get('MANAGER_FREQUENCY_PENALTY')
MANAGER_PRESENCE_PENALTY = ENVS.get('MANAGER_PRESENCE_PENALTY')
MANAGER_N = ENVS.get('MANAGER_N')
MANAGER_BEST_OF = ENVS.get('MANAGER_BEST_OF')
MANAGER_MAX_RETRIES = ENVS.get('MANAGER_MAX_RETRIES')

CREW_OUTPUT_FILE = r"output.txt"
